"""Add categories, mplans, and users tables

Revision ID: dea379388bbb
Revises: 906ed4e476b3
Create Date: 2024-09-08 08:19:38.204925

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "dea379388bbb"
down_revision: Union[str, None] = "906ed4e476b3"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "mplans",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("moving_date", sa.Date(), nullable=False),
        sa.Column("old_address", sa.String(), nullable=False),
        sa.Column("new_address", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("modified_at", sa.DateTime(), nullable=True),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_mplans_id"), "mplans", ["id"], unique=False)
    op.create_table(
        "mplan_categories",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("label", sa.String(), nullable=False),
        sa.Column("is_completed", sa.Boolean(), nullable=True),
        sa.Column("mplan_id", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["mplan_id"],
            ["mplans.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_mplan_categories_id"), "mplan_categories", ["id"], unique=False
    )
    op.drop_index("ix_categories_id", table_name="categories")
    op.drop_table("categories")
    op.drop_index("ix_mplan_id", table_name="mplan")
    op.drop_table("mplan")
    op.add_column("users", sa.Column("username", sa.String(), nullable=False))
    op.add_column("users", sa.Column("email", sa.String(), nullable=False))
    op.create_unique_constraint(None, "users", ["username"])
    op.create_unique_constraint(None, "users", ["email"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "users", type_="unique")
    op.drop_constraint(None, "users", type_="unique")
    op.drop_column("users", "email")
    op.drop_column("users", "username")
    op.create_table(
        "mplan",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="mplan_pkey"),
    )
    op.create_index("ix_mplan_id", "mplan", ["id"], unique=False)
    op.create_table(
        "categories",
        sa.Column("id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("label", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="categories_pkey"),
    )
    op.create_index("ix_categories_id", "categories", ["id"], unique=False)
    op.drop_index(op.f("ix_mplan_categories_id"), table_name="mplan_categories")
    op.drop_table("mplan_categories")
    op.drop_index(op.f("ix_mplans_id"), table_name="mplans")
    op.drop_table("mplans")
    # ### end Alembic commands ###
